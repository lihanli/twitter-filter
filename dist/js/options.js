// Generated by CoffeeScript 1.6.3
(function() {
  var dom, showSettingsSaved;

  dom = {
    filteredUserInput: $('.filtered-user-input'),
    filteredUsers: $('.filtered-users'),
    hideCompletely: $('.hide-completely'),
    alertsBox: $('.alerts-box')
  };

  showSettingsSaved = function() {
    var alertEl;
    alertEl = $("<div class=\"alert alert-success\">\n  <span class=\"glyphicon glyphicon-ok\"></span> Settings have been saved, reload page to see changes.\n</div>");
    dom.alertsBox.html(alertEl);
    util.highlight(alertEl);
    return alertEl.delay(5000).fadeOut('slow');
  };

  chrome.extension.sendMessage({
    filteredUsers: null
  }, function(res) {
    var filteredUsers;
    filteredUsers = models.generateTwitterUsers({
      users: res.filteredUsers,
      anyChangeCb: showSettingsSaved,
      events: {
        add: function(twitterUser) {
          var el;
          el = $("<li>\n  <span class=\"screen-name\">@" + (_.escape(twitterUser.get('screenName'))) + "</span>\n  <a class=\"close\">&times;</a>\n</li>").data('model', twitterUser);
          return dom.filteredUsers.append(el);
        },
        remove: function(twitterUser, __, opt) {
          return $(dom.filteredUsers.find('li')[opt.index]).remove();
        }
      }
    });
    dom.filteredUsers.on('click', '.close', function() {
      var el;
      el = $(this).parents('li');
      return filteredUsers.remove(el.data('model'));
    });
    return dom.filteredUserInput.keypress(function(e) {
      var twitterUser;
      if (e.keyCode === 13) {
        twitterUser = new models.TwitterUser({
          screenName: dom.filteredUserInput.val()
        });
        if (!twitterUser.isValid()) {
          return;
        }
        filteredUsers.add(twitterUser);
        return dom.filteredUserInput.val('');
      }
    });
  });

  chrome.extension.sendMessage({
    options: null
  }, function(res) {
    var options;
    options = new models.Options(res.options);
    options.on('renderAll change:hideCompletely', function() {
      return dom.hideCompletely.prop('checked', this.get('hideCompletely'));
    });
    options.trigger('renderAll');
    options.on('change', function() {
      util.saveToBg('options', options);
      return showSettingsSaved();
    });
    return dom.hideCompletely.change(function() {
      return options.set({
        hideCompletely: dom.hideCompletely.prop('checked')
      });
    });
  });

}).call(this);
