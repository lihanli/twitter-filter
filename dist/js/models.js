// Generated by CoffeeScript 1.6.3
(function() {
  window.models = {
    TwitterUser: Backbone.Model.extend({
      initialize: function() {
        return this.set({
          screenName: models.TwitterUser.sanitizeScreenName(this.get('screenName'))
        });
      },
      validate: function() {
        if (util.isBlank(this.get('screenName'))) {
          return "screenName can't be blank";
        }
      }
    }),
    TwitterUsers: Backbone.Collection.extend({
      model: this.TwitterUser,
      add: function(twitterUser) {
        if (this.any(function(_twitterUser) {
          return _twitterUser.get('screenName') === twitterUser.get('screenName');
        })) {
          return false;
        }
        return Backbone.Collection.prototype.add.apply(this, arguments);
      },
      findByScreenName: function(screenName) {
        return this.findWhere({
          screenName: models.TwitterUser.sanitizeScreenName(screenName)
        });
      }
    }),
    Options: Backbone.Model.extend({
      defaults: {
        hideCompletely: false
      }
    }),
    generateTwitterUsers: function(opt) {
      var cb, evt, twitterUsers, _ref;
      if (opt == null) {
        opt = {};
      }
      if (opt.events == null) {
        opt.events = {};
      }
      twitterUsers = new this.TwitterUsers();
      _ref = opt.events;
      for (evt in _ref) {
        cb = _ref[evt];
        twitterUsers.on(evt, cb);
      }
      twitterUsers.add(util.convertToBackboneArr(this.TwitterUser, opt.users));
      twitterUsers.on('change reset add remove', function(__, collection) {
        util.saveToBg('filteredUsers', collection);
        if (opt.anyChangeCb) {
          return opt.anyChangeCb();
        }
      });
      return twitterUsers;
    }
  };

  models.TwitterUser.sanitizeScreenName = function(screenName) {
    return $.trim(screenName).replace(/\W/g, '').toLowerCase();
  };

}).call(this);
